Standalone program 
A software that is able to operate independently of other software or harware.

Built-in Types 
The principal built-in types are numerics, sequences, mappings, classes, instances and exceptions. Ex. Boolean operation, comparison, Numberic types( int, flot)

Statically typed programming
Statically typed programming languages do type checking (i.e. the process of verifying and enforcing the constraints of types) at compile-time as opposed to run-time. Ex. Java, C++, C

import ("fmt"
)

func silly(a int) {
    if (a > 0) {
        fmt.Println("Hi")
    } else {
        fmt.Println("3" + 5)
    }
}

func main() {
    silly(2)
}

Raise error during compile time.  

Dynamically typed programming
Dynamically typed programming languages do type checking at run-time as opposed to compile-time. Ex. Perl, Ruby, Python, PHP, JavaScript
Ex. def silly(a):
    if a > 0:
        print 'Hi'
    else:
        print 5 + '3'
No error but raises error when a < 0        

Compile time
Compile time is when the program is compiled

Run time
Runtime is when it executes (on either a physical or virtual computer)

